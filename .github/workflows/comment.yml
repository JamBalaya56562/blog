name: üí¨ Comment on the pull request

on:
  workflow_run:
    workflows:
      - üß™ Test
    types:
      - completed

permissions:
  pull-requests: write

jobs:
  test-comment:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'failure'
    steps:
      - name: üì• Download result
        uses: actions/download-artifact@v4
        with:
          name: test_comment.txt
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: üì• Download pull request number
        uses: actions/download-artifact@v4
        with:
          name: pr_number.txt
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: ‚öôÔ∏è Setup Environment
        run: |
          echo "PR_NUMBER=$(cat pr_number.txt | tr -d '\n')" >> $GITHUB_ENV
          UUID=$(uuidgen)
          {
            echo "TEST_COMMENT<<EOF$UUID"
            cat test_comment.txt
            echo "EOF$UUID"
          } >> "$GITHUB_ENV"

      - name: ‚ùå Add a test comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const testComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('# ‚ùå Test Failed')
            })
            if (testComment) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: testComment.id,
              })
            }
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.TEST_COMMENT
            })

  fixed-test-comment:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.name == 'üß™ Test'
    steps:
      - name: ‚úÖ Add a Fixed comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const testComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('# ‚ùå Test Failed')
            })
            const body = `# ‚úÖ Test Passed
            Failed tests were fixed.
            <!-- generated-comment [Comment](${{ github.workflow_ref }}) -->`

            if (testComment) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: testComment.id,
              })
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              })
            }
