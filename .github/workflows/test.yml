name: üß™ Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - "app/**"
      - "public/**"
      - "test/**"
      - ".dockerignore"
      - "bun.lock"
      - "Dockerfile"
      - "package.json"
      - "*config.*"
  push:
    paths:
      - "app/**"
      - "public/**"
      - "test/**"
      - ".dockerignore"
      - "bun.lock"
      - "Dockerfile"
      - "package.json"
      - "*config.*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      did_fail: ${{ steps.test.outputs.did_fail }}
      test_log: ${{ steps.test.outputs.test_log }}

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üê£ Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: canary

      - name: üì¶ Install dependencies
        run: bun i

      - name: üß™ Test app
        id: test
        run: |
          bun test:app &> >(tee -p test.log) || STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "did_fail=1" >> $GITHUB_OUTPUT
          else
            echo "did_fail=0" >> $GITHUB_OUTPUT
          fi
          UUID=$(uuidgen)
          {
            echo "test_log<<EOF_$UUID"
            cat test.log
            echo "EOF_$UUID"
          } >> $GITHUB_OUTPUT

      - name: üíî Fail if test failed
        if: steps.test.outputs.did_fail == '1'
        run: exit 1

  create_comment:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      comment: ${{ steps.create_failed_comment.outputs.comment || steps.create_success_comment.outputs.comment }}
      title: ${{ steps.title.outputs.title }}
    if: always() && github.event_name == 'pull_request'

    steps:
      - name: ‚ùå Create test failed comment
        if: needs.test.outputs.did_fail == '1'
        id: create_failed_comment
        env:
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          SHA: ${{ github.event.pull_request.head.sha }}
          TEST_LOG: ${{ needs.test.outputs.test_log }}
        run: |
          UUID=$(uuidgen)
          {
            echo "comment<<EOF_$UUID"
            echo "# ‚ùå Test Failed"
            echo "@$ACTOR, your commit $SHA failed the test."
            echo ""
            echo "<details>"
            echo "<summary><strong>Test Log</strong></summary>"
            echo ""
            echo "\`\`\`shell"
            echo "$TEST_LOG"
            echo "\`\`\`"
            echo ""
            echo "</details>"
            echo ""
            echo "üëÄ[View in Actions](https://github.com/$REPO/actions/runs/$RUN_ID)"
            echo "<!-- generated-comment [Test](https://github.com/$REPO/.github/workflows/test.yml) -->"
            echo "EOF_$UUID"
          } >> $GITHUB_OUTPUT

      - name: ‚úÖ Create test success comment
        if: needs.test.outputs.did_fail == '0'
        id: create_success_comment
        env:
          REPO: ${{ github.repository }}
        run: |
          UUID=$(uuidgen)
          {
            echo "comment<<EOF_$UUID"
            echo "# ‚úÖ Test Passed"
            echo "All tests passed successfully."
            echo ""
            echo "<!-- generated-comment [Test](https://github.com/$REPO/.github/workflows/test.yml) -->"
            echo "EOF_$UUID"
          } >> $GITHUB_OUTPUT

      - name: üè≥Ô∏è Set up comment title
        id: title
        run: |
          echo "title=# ‚ùå Test Failed" >> $GITHUB_OUTPUT

  add_comment:
    needs: create_comment
    uses: ./.github/workflows/comment.yml
    with:
      comment: ${{ needs.create_comment.outputs.comment }}
      pr_number: ${{ github.event.pull_request.number }}
      title: ${{ needs.create_comment.outputs.title }}
    permissions:
      pull-requests: write
      issues: write
